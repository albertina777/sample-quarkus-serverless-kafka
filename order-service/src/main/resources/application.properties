quarkus.datasource.db-kind = h2
quarkus.datasource.jdbc.url = jdbc:h2:mem:testdb
quarkus.hibernate-orm.database.generation = drop-and-create

kafka.bootstrap.servers = ${KAFKA_BOOTSTRAP_SERVERS}

mp.messaging.outgoing.order-events.connector = smallrye-kafka
mp.messaging.outgoing.order-events.topic = ${KAFKA_TOPIC}

mp.messaging.outgoing.order-events.value.serializer = io.quarkus.kafka.client.serialization.ObjectMapperSerializer

#quarkus.kubernetes-client.trust-certs = true
#
#quarkus.kubernetes.deploy = true
#quarkus.kubernetes.deployment-target = knative
#quarkus.knative.env.vars.kafka-topic = order-events
#quarkus.knative.env.vars.tick-timeout = 10000
#quarkus.container-image.group = demo-apps
#quarkus.container-image.registry = image-registry.openshift-image-registry.svc:5000

app.orders.timeout = ${TICK_TIMEOUT}

quarkus.funqy.export = function
quarkus.package.type = legacy-jar